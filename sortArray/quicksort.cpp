// Исходный код предоставел Галынец Н.
// Доработал код Михальцов П.
#include <iostream>
#include <ctime>
#define PREDEL 100  // предел для случайных чисел
using namespace std;

// Функция быстрой сортировки
void quickSort(int *n, int l, int r)
{
  int p; // разрешающий элемент
  int l_h = l; //левая граница
  int r_h = r; // правая граница
  p = n[l];
  while (l < r) // пока границы не сомкнутся
  {
    while ((n[r] >= p) && (l < r))
      r--; // сдвигаем правую границу пока элемент [r] больше [p]
    if (l != r) // если границы не сомкнулись
    {
      n[l] = n[r]; // перемещаем элемент [r] на место разрешающего
      l++; // сдвигаем левую границу вправо
    }
    while ((n[l] <= p) && (l < r))
      l++; // сдвигаем левую границу пока элемент [l] меньше [p]
    if (l != r) // если границы не сомкнулись
    {
      n[r] = n[l]; // перемещаем элемент [l] на место [r]
      r--; // сдвигаем правую границу вправо
    }
  }
  n[l] = p; // ставим разрешающий элемент на место
  p= l;
  l = l_h;
  r = r_h;
  if (l < p) // Рекурсивно вызываем сортировку для левой и правой части массива
    quickSort(n, l, p - 1);
  if (r > p)
    quickSort(n, p + 1, r);
}
int main()
{
  int n; cout << "Введите кол-во элементвов массива : "; cin >> n; //Вводим кол-во элементов массива
  int* a = new int[n];  //создаём динамический массив для совместимости с MSVS
  
  srand(time (NULL));   // Заполнение массива случайными числами
  for (int i = 0; i<n; i++){
     a[i] = rand() % PREDEL;
  }  

  std::cout << "Массив  до  сортировки  : ";  // Вывод элементов массива до сортировки
  for (int i = 0; i<n; i++){
    cout << a[i] << " ";
  }
  cout << endl;

  quickSort(a, 0, n-1); // вызов функции сортировки

  std::cout << "Массив после сортировки : ";  // Вывод элементов массива после сортировки
  for (int i = 0; i<n; i++){
    cout << a[i] << " ";
  }

  cout << endl;
  return 0;
}
